/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Fleet;
import model.FleetDirectory;

/**
 *
 * @author aravindpolepeddi
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    FleetDirectory fleetdir;
    ViewJPanel(FleetDirectory fleetdir) {
        initComponents();
        this.fleetdir=fleetdir;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextSearchField = new javax.swing.JTextField();
        jComboBoxFilter = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButtonMarkAvailable = new javax.swing.JButton();
        jButtonMarkUnavailable = new javax.swing.JButton();
        jButtonView = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextMin = new javax.swing.JTextField();
        jTextMax = new javax.swing.JTextField();
        jButtonFirstAvailable = new javax.swing.JButton();
        jButtonExpiredCars = new javax.swing.JButton();
        jLabelTime = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Fleet");

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Model", "Manufacturerl", "Year of Manufacture", "Serial No.", "City", "Availabity", "Max Seats", "Updated Time"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSearchFieldActionPerformed(evt);
            }
        });
        jTextSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextSearchFieldKeyReleased(evt);
            }
        });

        jComboBoxFilter.setBackground(new java.awt.Color(0, 153, 51));
        jComboBoxFilter.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Model", "Manufacturer", "Year of Manufacture", "Serial No.", "City", "Seats", "Availability", "Updated Time", " " }));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Last Updated Time:");

        jButtonMarkAvailable.setBackground(new java.awt.Color(0, 153, 51));
        jButtonMarkAvailable.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMarkAvailable.setText("Mark Available");
        jButtonMarkAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarkAvailableActionPerformed(evt);
            }
        });

        jButtonMarkUnavailable.setBackground(new java.awt.Color(0, 153, 51));
        jButtonMarkUnavailable.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMarkUnavailable.setText("Mark Unavailable");
        jButtonMarkUnavailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarkUnavailableActionPerformed(evt);
            }
        });

        jButtonView.setBackground(new java.awt.Color(0, 153, 51));
        jButtonView.setForeground(new java.awt.Color(255, 255, 255));
        jButtonView.setText("View");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(0, 153, 51));
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search Car with Seats");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextMin.setText("Min");

        jTextMax.setText("Max");

        jButtonFirstAvailable.setBackground(new java.awt.Color(0, 153, 51));
        jButtonFirstAvailable.setForeground(new java.awt.Color(255, 255, 255));
        jButtonFirstAvailable.setText("First available Car");
        jButtonFirstAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFirstAvailableActionPerformed(evt);
            }
        });

        jButtonExpiredCars.setBackground(new java.awt.Color(0, 153, 51));
        jButtonExpiredCars.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExpiredCars.setText("Expired Maintainance Cars");
        jButtonExpiredCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExpiredCarsActionPerformed(evt);
            }
        });

        jLabelTime.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTime.setText("Time");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonMarkAvailable))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonExpiredCars)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonMarkUnavailable)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonView))
                                    .addComponent(jButtonFirstAvailable))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jTextMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButtonDelete))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButtonMarkAvailable)
                    .addComponent(jButtonMarkUnavailable)
                    .addComponent(jButtonView)
                    .addComponent(jButtonDelete)
                    .addComponent(jLabelTime))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jTextMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jButtonFirstAvailable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonExpiredCars)
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSearchFieldActionPerformed

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
        // TODO add your handling code here:
        refreshTable();
        int rowCount =jTable1.getRowCount();
        int i=0;
        for(Fleet p: fleetdir.getFleetlist()){
        if(i==rowCount-1){
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
        String strDate = dateFormat.format(p.getUpdateTime());  
        jLabelTime.setText(strDate);
        }
        i++;
        }
        
    }//GEN-LAST:event_jButtonViewActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int rowdelete=jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.removeRow(rowdelete);
        int rowCount =jTable1.getRowCount();
        int i=0;
        for(Fleet p: fleetdir.getFleetlist()){
        if(i==rowdelete){
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
        String strDate = dateFormat.format(p.getUpdateTime());  
        jLabelTime.setText(strDate);
        fleetdir.removeFleet(p);
        }
        i++;
        }

        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonExpiredCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExpiredCarsActionPerformed
        // TODO add your handling code here:  
        int rowCount =jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                for(int i=rowCount - 1;i>=0;i--){
            model.removeRow(i);
        }
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
	Date date = new Date();
        for(Fleet p: fleetdir.getFleetlist()){
            if(date.before(p.getMaintainanceExpiry())){
            continue;
            }
            else{
            Object row[] = new Object[8];
            row[0] = p.getCarModel();
            row[1] = p.getCarManufacturer();
            row[2] = p.getYearofManufacture();
            row[3] = p.getSerialNumber();
            row[4] = p.getAvailableCity();
            row[5] = p.getAvailable();
            row[6] = p.getSeatingCapacity();
            row[7] = p.getUpdatedTime();
            model.addRow(row);}
        }
        
        
    }//GEN-LAST:event_jButtonExpiredCarsActionPerformed

    private void jTextSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchFieldKeyReleased
        // TODO add your handling code here:
        int rowCount =jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String SearchString=jTextSearchField.getText();
        int ColumnIndex = jComboBoxFilter.getSelectedIndex();
        TableRowSorter<DefaultTableModel> filtermodel=new TableRowSorter<DefaultTableModel>(model);
        jTable1.setRowSorter(filtermodel);
        int columnindex=jComboBoxFilter.getSelectedIndex();
        filtermodel.setRowFilter(RowFilter.regexFilter(SearchString, columnindex));
        

    }//GEN-LAST:event_jTextSearchFieldKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                int rowCount =jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for(int i=rowCount - 1;i>=0;i--){
            model.removeRow(i);
        }
      
        TableRowSorter<DefaultTableModel> filtermodel=new TableRowSorter<DefaultTableModel>(model);
        jTable1.setRowSorter(filtermodel);
        for(Fleet p: fleetdir.getFleetlist()){
            if(Integer.parseInt(jTextMin.getText())<=p.getSeatingCapacity() && p.getSeatingCapacity()<=Integer.parseInt(jTextMax.getText())){
            Object row[] = new Object[8];
            row[0] = p.getCarModel();
            row[1] = p.getCarManufacturer();
            row[2] = p.getYearofManufacture();
            row[3] = p.getSerialNumber();
            row[4] = p.getAvailableCity();
            row[5] = p.getAvailable();
            row[6] = p.getSeatingCapacity();
            row[7] = p.getUpdatedTime();
            model.addRow(row);     
            }            
        }
              
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonMarkAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarkAvailableActionPerformed
        // TODO add your handling code here:
        int rowSelected=jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int i=0;
        for(Fleet p: fleetdir.getFleetlist()){
        if(i==rowSelected){
        p.setAvailable("YES");
        }
        i++;
        }
        
    }//GEN-LAST:event_jButtonMarkAvailableActionPerformed

    private void jButtonMarkUnavailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarkUnavailableActionPerformed
        // TODO add your handling code here:
        int rowSelected=jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int i=0;
        for(Fleet p: fleetdir.getFleetlist()){
        if(i==rowSelected){
        p.setAvailable("NO");
        }
        i++;
        }
    }//GEN-LAST:event_jButtonMarkUnavailableActionPerformed

    private void jButtonFirstAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFirstAvailableActionPerformed
        // TODO add your handling code here:
        int rowCount =jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for(int i=rowCount - 1;i>=0;i--){
            model.removeRow(i);
        }
        for(Fleet p: fleetdir.getFleetlist()){
        if(p.getAvailable()=="YES"){
        Object row[] = new Object[8];
            row[0] = p.getCarModel();
            row[1] = p.getCarManufacturer();
            row[2] = p.getYearofManufacture();
            row[3] = p.getSerialNumber();
            row[4] = p.getAvailableCity();
            row[5] = p.getAvailable();
            row[6] = p.getSeatingCapacity();
            row[7] = p.getUpdatedTime();
            model.addRow(row);
            break;
        }
        }
    }//GEN-LAST:event_jButtonFirstAvailableActionPerformed

        public void refreshTable(){
        int rowCount =jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for(int i=rowCount - 1;i>=0;i--){
            model.removeRow(i);
        }
        for(Fleet p: fleetdir.getFleetlist()){
            Object row[] = new Object[8];
            row[0] = p.getCarModel();
            row[1] = p.getCarManufacturer();
            row[2] = p.getYearofManufacture();
            row[3] = p.getSerialNumber();
            row[4] = p.getAvailableCity();
            row[5] = p.getAvailable();
            row[6] = p.getSeatingCapacity();
            row[7] = p.getUpdatedTime();
            model.addRow(row);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonExpiredCars;
    private javax.swing.JButton jButtonFirstAvailable;
    private javax.swing.JButton jButtonMarkAvailable;
    private javax.swing.JButton jButtonMarkUnavailable;
    private javax.swing.JButton jButtonView;
    private javax.swing.JComboBox<String> jComboBoxFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextMax;
    private javax.swing.JTextField jTextMin;
    private javax.swing.JTextField jTextSearchField;
    // End of variables declaration//GEN-END:variables
}
